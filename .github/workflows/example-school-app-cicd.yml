name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:  

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      PROJECT_PATH: ExampleSchoolApp/ExampleSchoolApp
    steps:
      - name: git checkout
        uses: actions/checkout@v2
        
      - name: configure dotnet cli
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: install dotnet ef tool
        run: dotnet tool install --global dotnet-ef

      - name: install dependencies
        run: dotnet restore $PROJECT_PATH/ExampleSchoolApp.csproj

      - name: dotnet publish
        run: dotnet publish --no-restore -c Release $PROJECT_PATH/ExampleSchoolApp.csproj

      - name: zip artifact
        run: |
          cd ${{ env.PROJECT_PATH }}/bin/Release/net6.0/publish
          zip -r app.zip .

      - name: build migration bundle
        run: dotnet ef migrations bundle -o ./efbundle -p $PROJECT_PATH/ExampleSchoolApp.csproj

      - name: upload app artifact
        uses: actions/upload-artifact@v2
        with:
          name: ExampleSchoolApp
          path: ${{ env.PROJECT_PATH }}/bin/Release/net6.0/publish/app.zip

      - name: upload migrations artifact
        uses: actions/upload-artifact@v2
        with:
          name: ExampleSchoolAppMigrations
          path: ./efbundle

  provision:
    runs-on: ubuntu-latest
    outputs:
      resourceGroupName: ${{ steps.azure-deploy.outputs.rgName }}
      webAppName: ${{ steps.azure-deploy.outputs.webAppName }}
      sqlServerHostname: ${{ steps.azure-deploy.outputs.sqlServerHostname }}
    steps:
      - name: git checkout
        uses: actions/checkout@v2
        
      - name: azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: deploy bicep
        uses: azure/CLI@v1
        id: azure-deploy
        with:
          azcliversion: 2.30.0
          inlineScript: |
            deploy=$(az deployment sub create -l uksouth -f ./ExampleSchoolApp/Infrastructure/main.bicep -p \
              sqlAdminUsername='${{ secrets.SQL_ADMIN_USERNAME }}' \
              sqlAdminPassword='${{ secrets.SQL_ADMIN_PASSWORD }}')
            rgName=$(echo $deploy | jq -r '.properties.outputs.resourceGroupName.value')
            appName=$(echo $deploy | jq -r '.properties.outputs.webAppName.value')
            sqlServerHostname=$(echo $deploy | jq -r '.properties.outputs.sqlServerHostname.value')
            echo "::set-output name=rgName::$rgName"
            echo "::set-output name=webAppName::$appName"
            echo "::set-output name=sqlServerHostname::$sqlServerHostname"

  deploy:
    runs-on: ubuntu-latest
    needs: [ provision, build ]
    steps: 
      - name: git checkout
        uses: actions/checkout@v2

      - name: download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - run: ls -R

      - name: migrate db schema
        run: |
          pwd
          mv ./artifacts/ExampleSchoolAppMigrations/efbundle ./ExampleSchoolApp
          cd ./ExampleSchoolApp
          pwd
          ls
          chmod +x efbundle
          connectionString="Data Source=${{ needs.provision.outputs.sqlServerHostname }};Database=SchoolContext;MultipleActiveResultSets=true;User ID=${{ secrets.SQL_ADMIN_USERNAME }};Password=${{ secrets.SQL_ADMIN_PASSWORD }}"
          ./efbundle --connection "$connectionString"

      - name: azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: deploy web app
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az webapp deployment source config-zip --resource-group ${{ needs.provision.outputs.resourceGroupName }} \
              --name ${{ needs.provision.outputs.webAppName }} --src ./ExampleSchoolApp/app.zip
